# ==============================================================================
#                         日志系统配置文件
# ==============================================================================
# 此配置文件用于定义网关应用的日志记录行为，包括日志级别、输出格式、轮转策略等参数

# ----------------------------------------
# 基础日志配置
# ----------------------------------------
# 日志级别：控制记录哪些级别的日志信息
# 可选值：debug(调试)、info(信息)、warn(警告)、error(错误)、dpanic(致命错误)、panic(恐慌)、fatal(致命)
level: "info"

# 日志格式：控制日志输出的格式
# 可选值：json(结构化JSON格式)、console(控制台友好格式)
format: "json"


# ----------------------------------------
# 日志输出路径配置
# ----------------------------------------
# 日志输出路径：指定日志写入的目标位置
# 支持标准输出(stdout)和文件路径，可以指定多个目标
output_paths:
  - "stdout"
  - "/home/leon/GoCode/go-gateway/logs/app.log"

# 错误日志输出路径：专门用于记录错误及以上级别的日志
# 错误日志将独立存储到指定位置，便于问题排查
error_paths:
  - "/home/leon/GoCode/go-gateway/logs/error.log"


# ----------------------------------------
# 日志元数据配置
# ----------------------------------------
# 启用调用者信息：是否记录产生日志的代码位置信息（文件名、行号）
enable_caller: true

# 启用堆栈跟踪：是否记录产生日志时的调用堆栈信息
enable_stacktrace: true

# 堆栈跟踪级别：指定在哪个日志级别及以上记录堆栈跟踪
# 可选值与日志级别相同，设置为error表示只有error及更高等级的日志才记录堆栈
stacktrace_level: "error"


# ----------------------------------------
# 日志轮转配置
# ----------------------------------------
# 日志轮转配置：控制日志文件的自动轮转和清理行为
# 注意：请确保日志目录已存在或应用程序有创建权限
rotation:
  # 启用日志轮转
  enabled: true
  
  # 轮转策略：指定触发日志轮转的条件
  # 可选值：time(基于时间)、size(基于文件大小)、size_and_time(两者结合)
  policy: "size_and_time"
  
  # 时间轮转间隔：当策略包含time时生效
  # 可选值：minute(分钟级)、hour(小时级)、24h(天级)
  time_interval: "hour"
  
  # 大小轮转阈值：当策略包含size时生效，单位为MB
  max_size: 100
  
  # 最大备份文件数：保留的历史日志文件数量上限
  max_backups: 7
  
  # 最大保留时间：日志文件的最长保留时间，单位与time_interval一致
  max_age: 1
  
  # 是否压缩归档的日志文件：启用后会自动压缩过期的日志文件以节省空间
  compress: true